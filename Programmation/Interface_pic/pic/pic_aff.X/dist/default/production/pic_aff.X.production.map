Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\pic_aff.X.production.sym \
  --cmf=dist/default/production\pic_aff.X.production.cmf -z -Q18LF2520 \
  -oC:\Users\xoxox\AppData\Local\Temp\sgj8.2 \
  -Mdist/default/production/pic_aff.X.production.map -E1 -ver=XC8 \
  -ASTACK=03C4h-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 \
  -ABANK0=080h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F80h-0FFFh -preset_vec=00h,intcode=08h,intcodelo,powerup,init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\xoxox\AppData\Local\Temp\sgj8.obj \
  dist/default/production\pic_aff.X.production.obj 

Object code version is 3.11

Machine type is 18LF2520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\xoxox\AppData\Local\Temp\sgj8.obj
                init                                5B6      5B6        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\pic_aff.X.production.obj
                intcode                               8        8      5AE        4       0
                temp                                 62       62        1        1       1
                smallconst                          600      600       20      300       0
                text29                             1D5E     1D5E       18      DA4       0
                text27                             1CAC     1CAC       28      DA4       0
                text26                             1BF8     1BF8       32      DA4       0
                text25                             1C84     1C84       28      DA4       0
                text24                             1D84     1D84        E      DA4       0
                text23                             1D42     1D42       1C      DA4       0
                text22                             1D76     1D76        E      DA4       0
                text21                             1BC2     1BC2       36      DA4       0
                text20                             1C5A     1C5A       2A      DA4       0
                text19                             1C2A     1C2A       30      DA4       0
                text18                             1988     1988       84      310       0
                text17                             17B4     17B4       AE      310       0
                text16                             1D1E     1D1E       24      DA4       0
                text15                             1B8A     1B8A       38      DA4       0
                text14                             144C     144C       E6      310       0
                text13                             1CFA     1CFA       24      DA4       0
                text12                             10B6     10B6      1AE      310       0
                text11                             1B48     1B48       42      DA4       0
                text10                             1358     1358       F4      310       0
                text9                              1CD4     1CD4       26      DA4       0
                text8                              1614     1614       DA      310       0
                text7                              1A84     1A84       78      310       0
                text6                              18F8     18F8       90      310       0
                text5                              1264     1264       F4      310       0
                text4                              1A0C     1A0C       78      310       0
                text3                              1532     1532       E2      310       0
                text2                              16EE     16EE       C6      310       0
                text1                               EC6      EC6      1F0      310       0
                text0                               620      620      8A6      310       0
                cstackCOMRAM                          1        1       59        1       1
                cstackBANK0                          80       80       3D       80       1
                bssBANK3                            300      300       C4      300       1
                dataBANK2                           200      200       4B      200       1
                bssBANK1                            100      100       FC      100       1
                dataBANK0                            C8       C8        5       80       1
                bssBANK0                             BD       BD        B       80       1
                dataCOMRAM                           60       60        2        1       1
                bssCOMRAM                            5A       5A        6        1       1
                cinit                              1862     1862       96      310       0
                idataBANK2                         1AFC     1AFC       4B      310       0
                idataBANK0                         1D92     1D92        5      DA4       0
                idataCOMRAM                        1D97     1D97        2      DA4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8      5AE         0
                init                                5B6      5B6        4         0
                reset_vec                             0        0        4         0
                text29                             1D5E     1D5E       18         0
                text27                             1CAC     1CAC       28         0
                text26                             1BF8     1BF8       32         0
                text25                             1C84     1C84       28         0
                text24                             1D84     1D84        E         0
                text23                             1D42     1D42       1C         0
                text22                             1D76     1D76        E         0
                text21                             1BC2     1BC2       36         0
                text20                             1C5A     1C5A       2A         0
                text19                             1C2A     1C2A       30         0
                text18                             1988     1988       84         0
                text17                             17B4     17B4       AE         0
                text16                             1D1E     1D1E       24         0
                text15                             1B8A     1B8A       38         0
                text14                             144C     144C       E6         0
                text13                             1CFA     1CFA       24         0
                text12                             10B6     10B6      1AE         0
                text11                             1B48     1B48       42         0
                text10                             1358     1358       F4         0
                text9                              1CD4     1CD4       26         0
                text8                              1614     1614       DA         0
                text7                              1A84     1A84       78         0
                text6                              18F8     18F8       90         0
                text5                              1264     1264       F4         0
                text4                              1A0C     1A0C       78         0
                text3                              1532     1532       E2         0
                text2                              16EE     16EE       C6         0
                text1                               EC6      EC6      1F0         0
                text0                               620      620      8A6         0
                cinit                              1862     1862       96         0
                idataBANK2                         1AFC     1AFC       4B         0
                idataBANK0                         1D92     1D92        5         0
                idataCOMRAM                        1D97     1D97        2         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       20         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 62       62        1         1
                cstackCOMRAM                          1        1       59         1
                dataCOMRAM                           60       60        2         1
                bssCOMRAM                            5A       5A        6         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          80       80       3D         1
                dataBANK0                            C8       C8        5         1
                bssBANK0                             BD       BD        B         1

        CLASS   BANK1          
                bssBANK1                            100      100       FC         1

        CLASS   BANK2          
                dataBANK2                           200      200       4B         1

        CLASS   BANK3          
                bssBANK3                            300      300       C4         1

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000062  000063         1       1  COMRAM  
                intcode                        000008  0005B2  0005BA         4       0  CODE    
                cstackBANK0                    000080  00004D  0000CD        80       1  BANK0   
                bssBANK1                       000100  0000FC  0001FC       100       1  BANK1   
                dataBANK2                      000200  00004B  00024B       200       1  BANK2   
                bssBANK3                       000300  0000C4  0003C4       300       1  BANK3   
                smallconst                     000600  000020  000620       300       0  SMALLCON
                text0                          000620  001527  001B47       310       0  CODE    
                text11                         001B48  000251  001D99       DA4       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000CD-0000FF               33
        BANK1            0001FC-0001FF                4
        BANK2            00024B-0002FF               B5
        BANK3            0003C4-0003FF               3C
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000063-00007F               1D
                         0000CD-0000FF               33
                         0001FC-0001FF                4
                         00024B-0002FF               B5
                         0003C4-0005FF              23C
        CODE             000004-000007                4
                         0005BA-0005FF               46
                         001B47-001B47                1
                         001D99-007FFF             6267
        COMRAM           000063-00007F               1D
        CONST            000004-000007                4
                         0005BA-0005FF               46
                         001B47-001B47                1
                         001D99-007FFF             6267
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001B47-001B47                1
                         001D99-007FFF             6267
        RAM              0000CD-0000FF               33
                         0001FC-0001FF                4
                         00024B-0002FF               B5
                         0003C4-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       001B47-001B47                1
                         001D99-007FFF              100
        STACK            0003C4-0005FF              23C

                                  Symbol Table

?_Adc                    cstackCOMRAM 00001E
?___altoft               cstackCOMRAM 000044
?___awdiv                cstackCOMRAM 00001E
?___awtoft               cstackCOMRAM 000044
?___ftadd                cstackBANK0  000080
?___ftdiv                cstackCOMRAM 000026
?___ftmul                cstackCOMRAM 00004B
?___ftneg                cstackCOMRAM 000048
?___ftpack               cstackCOMRAM 00001E
?___ftsub                cstackBANK0  00008C
?___fttol                cstackCOMRAM 000035
?___lwtoft               cstackCOMRAM 000026
?___wmul                 cstackCOMRAM 00001E
?_eval_poly              cstackBANK0  00008C
?_exp                    cstackBANK0  00009F
?_floor                  cstackBANK0  00008C
?_ldexp                  cstackBANK0  000098
Adc@channel              cstackCOMRAM 000022
ClearArray@cpt_vide      cstackCOMRAM 00001E
ISR@Receive              cstackCOMRAM 00001C
ISR@data_spi             cstackCOMRAM 00001D
Modulo@M_nombre          cstackCOMRAM 000001
PrintC@c_printC          cstackCOMRAM 00001E
PrintS@s_printS          cstackCOMRAM 00001F
_ABDEN                   (abs)        007DC0
_ADCInit                 text27       001CAC
_ADCON0bits              (abs)        000FC2
_ADCON1bits              (abs)        000FC1
_ADCON2bits              (abs)        000FC0
_ADRESH                  (abs)        000FC4
_ADRESL                  (abs)        000FC3
_Adc                     text26       001BF8
_AutoLight               bssBANK0     0000C6
_BRG16                   (abs)        007DC3
_BRGH                    (abs)        007D62
_CREN                    (abs)        007D5C
_Checksum                bssCOMRAM    00005A
_ClearArray              text25       001C84
_ClockInit               text24       001D84
_CptSend                 dataCOMRAM   000060
_CptSpi                  dataCOMRAM   000061
_EtatScreen              bssBANK0     0000C7
_EtatSpi                 bssCOMRAM    00005F
_FERR                    (abs)        007D5A
_FlagSleep               bssCOMRAM    00005C
_FlagSpi                 dataBANK0    0000CC
_INTCONbits              (abs)        000FF2
_ISR                     intcode      000008
_InitTmr0                text23       001D42
_LATAbits                (abs)        000F89
_LATCbits                (abs)        000F8B
_Modulo                  text29       001D5E
_OERR                    (abs)        007D59
_OSCCONbits              (abs)        000FD3
_OSCTUNEbits             (abs)        000F9B
_PIE1bits                (abs)        000F9D
_PIR1bits                (abs)        000F9E
_PSA                     (abs)        007EAB
_PosCursorPrgm           bssBANK0     0000C5
_PosX                    dataBANK0    0000CA
_PosY                    dataBANK0    0000C8
_PrgmChoisi              bssCOMRAM    00005D
_PrintC                  text22       001D76
_PrintS                  text21       001BC2
_RCIE                    (abs)        007CED
_RCIF                    (abs)        007CF5
_RCREG                   (abs)        000FAE
_RX9                     (abs)        007D5E
_RXDTP                   (abs)        007DC5
_SENDB                   (abs)        007D63
_SPBRG                   (abs)        000FAF
_SPBRGH                  (abs)        000FB0
_SPEN                    (abs)        007D5F
_SSPBUF                  (abs)        000FC9
_SSPCON1bits             (abs)        000FC6
_SSPSTATbits             (abs)        000FC7
_SYNC                    (abs)        007D64
_Score                   bssBANK0     0000BF
_SendMsgSreen            bssBANK1     000100
_SpiInit                 text20       001C5A
_T08BIT                  (abs)        007EAE
_T0CS                    (abs)        007EAD
_T0PS0                   (abs)        007EA8
_T0PS1                   (abs)        007EA9
_T0PS2                   (abs)        007EAA
_T0SE                    (abs)        007EAC
_TMR0H                   (abs)        000FD7
_TMR0IF                  (abs)        007F92
_TMR0L                   (abs)        000FD6
_TMR0ON                  (abs)        007EAF
_TRISA5                  (abs)        007C95
_TRISAbits               (abs)        000F92
_TRISC3                  (abs)        007CA3
_TRISC4                  (abs)        007CA4
_TRISC5                  (abs)        007CA5
_TRISC6                  (abs)        007CA6
_TRISC7                  (abs)        007CA7
_TRISCbits               (abs)        000F94
_TX9                     (abs)        007D66
_TXCKP                   (abs)        007DC4
_TXEN                    (abs)        007D65
_TXREG1                  (abs)        000FAD
_TXSTA1bits              (abs)        000FAC
_TailleMsgSpi            bssCOMRAM    00005E
_TailleTerm              bssBANK0     0000C1
_TextSpi                 bssBANK3     000300
_TypeVarSpi              bssBANK0     0000C4
_UartInit                text19       001C2A
_WUE                     (abs)        007DC1
__CFG_BOREN$SBORDIS      (abs)        000000
__CFG_BORV$3             (abs)        000000
__CFG_CCP2MX$PORTC       (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CP2$OFF            (abs)        000000
__CFG_CP3$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTR2$OFF          (abs)        000000
__CFG_EBTR3$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LPT1OSC$OFF        (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$ON           (abs)        000000
__CFG_OSC$INTIO67        (abs)        000000
__CFG_PBADEN$ON          (abs)        000000
__CFG_PWRT$OFF           (abs)        000000
__CFG_STVREN$ON          (abs)        000000
__CFG_WDT$OFF            (abs)        000000
__CFG_WDTPS$32768        (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRT2$OFF           (abs)        000000
__CFG_WRT3$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__CFG_XINST$OFF          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssBANK0              bssBANK0     000000
__HbssBANK1              bssBANK1     000000
__HbssBANK3              bssBANK3     000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackBANK0           cstackBANK0  000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__HdataBANK0             dataBANK0    000000
__HdataBANK2             dataBANK2    000000
__HdataCOMRAM            dataCOMRAM   000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__HidataBANK0            idataBANK0   000000
__HidataBANK2            idataBANK2   000000
__HidataCOMRAM           idataCOMRAM  000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         0005BA
__Hintcode               intcode      0005B6
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    0005B6
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      0005B6
__Hram                   ram          000000
__Hramtop                ramtop       000600
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000620
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        0003C4
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000063
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext17                text17       000000
__Htext18                text18       000000
__Htext19                text19       000000
__Htext2                 text2        000000
__Htext20                text20       000000
__Htext21                text21       000000
__Htext22                text22       000000
__Htext23                text23       000000
__Htext24                text24       000000
__Htext25                text25       000000
__Htext26                text26       000000
__Htext27                text27       000000
__Htext29                text29       000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssBANK0              bssBANK0     000000
__LbssBANK1              bssBANK1     000000
__LbssBANK3              bssBANK3     000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackBANK0           cstackBANK0  000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__LdataBANK0             dataBANK0    000000
__LdataBANK2             dataBANK2    000000
__LdataCOMRAM            dataCOMRAM   000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__LidataBANK0            idataBANK0   000000
__LidataBANK2            idataBANK2   000000
__LidataCOMRAM           idataCOMRAM  000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         0005B6
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    0005B6
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      0005B6
__Lram                   ram          000000
__Lramtop                ramtop       000600
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000600
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000062
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext17                text17       000000
__Ltext18                text18       000000
__Ltext19                text19       000000
__Ltext2                 text2        000000
__Ltext20                text20       000000
__Ltext21                text21       000000
__Ltext22                text22       000000
__Ltext23                text23       000000
__Ltext24                text24       000000
__Ltext25                text25       000000
__Ltext26                text26       000000
__Ltext27                text27       000000
__Ltext29                text29       000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        0003C4
__S2                     (abs)        000000
___altoft                text7        001A84
___altoft@c              cstackCOMRAM 000044
___altoft@exp            cstackCOMRAM 00004C
___altoft@sign           cstackCOMRAM 00004D
___awdiv                 text18       001988
___awdiv@counter         cstackCOMRAM 000022
___awdiv@dividend        cstackCOMRAM 00001E
___awdiv@divisor         cstackCOMRAM 000020
___awdiv@quotient        cstackCOMRAM 000024
___awdiv@sign            cstackCOMRAM 000023
___awtoft                text15       001B8A
___awtoft@c              cstackCOMRAM 000044
___awtoft@sign           cstackCOMRAM 000047
___ftadd                 text12       0010B6
___ftadd@exp1            cstackBANK0  00008B
___ftadd@exp2            cstackBANK0  00008A
___ftadd@f1              cstackBANK0  000080
___ftadd@f2              cstackBANK0  000083
___ftadd@sign            cstackBANK0  000089
___ftdiv                 text14       00144C
___ftdiv@cntr            cstackCOMRAM 00002F
___ftdiv@exp             cstackCOMRAM 000033
___ftdiv@f1              cstackCOMRAM 000026
___ftdiv@f2              cstackCOMRAM 000029
___ftdiv@f3              cstackCOMRAM 000030
___ftdiv@sign            cstackCOMRAM 000034
___ftge                  text6        0018F8
___ftge@ff1              cstackCOMRAM 00001E
___ftge@ff2              cstackCOMRAM 000021
___ftmul                 text10       001358
___ftmul@cntr            cstackCOMRAM 000058
___ftmul@exp             cstackCOMRAM 000054
___ftmul@f1              cstackCOMRAM 00004B
___ftmul@f2              cstackCOMRAM 00004E
___ftmul@f3_as_product   cstackCOMRAM 000055
___ftmul@sign            cstackCOMRAM 000059
___ftneg                 text13       001CFA
___ftneg@f1              cstackCOMRAM 000048
___ftpack                text17       0017B4
___ftpack@arg            cstackCOMRAM 00001E
___ftpack@exp            cstackCOMRAM 000021
___ftpack@sign           cstackCOMRAM 000022
___ftsub                 text11       001B48
___ftsub@f1              cstackBANK0  00008C
___ftsub@f2              cstackBANK0  00008F
___fttol                 text5        001264
___fttol@exp1            cstackCOMRAM 000043
___fttol@f1              cstackCOMRAM 000035
___fttol@lval            cstackCOMRAM 00003F
___fttol@sign1           cstackCOMRAM 00003E
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___lwtoft                text16       001D1E
___lwtoft@c              cstackCOMRAM 000026
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
___wmul                  text9        001CD4
___wmul@multiplicand     cstackCOMRAM 000020
___wmul@multiplier       cstackCOMRAM 00001E
___wmul@product          cstackCOMRAM 000022
__accesstop              (abs)        000080
__activetblptr           (abs)        000002
__end_of_ADCInit         text27       001CD4
__end_of_Adc             text26       001C2A
__end_of_ClearArray      text25       001CAC
__end_of_ClockInit       text24       001D92
__end_of_ISR             intcode      0005B6
__end_of_InitTmr0        text23       001D5E
__end_of_Modulo          text29       001D76
__end_of_PrintC          text22       001D84
__end_of_PrintS          text21       001BF8
__end_of_SpiInit         text20       001C84
__end_of_UartInit        text19       001C5A
__end_of___altoft        text7        001AFC
__end_of___awdiv         text18       001A0C
__end_of___awtoft        text15       001BC2
__end_of___ftadd         text12       001264
__end_of___ftdiv         text14       001532
__end_of___ftge          text6        001988
__end_of___ftmul         text10       00144C
__end_of___ftneg         text13       001D1E
__end_of___ftpack        text17       001862
__end_of___ftsub         text11       001B8A
__end_of___fttol         text5        001358
__end_of___lwtoft        text16       001D42
__end_of___wmul          text9        001CFA
__end_of__initialization cinit        0018EA
__end_of_eval_poly       text8        0016EE
__end_of_exp             text1        0010B6
__end_of_floor           text3        001614
__end_of_frexp           text4        001A84
__end_of_ldexp           text2        0017B4
__end_of_main            text0        000EC6
__end_ofexp@coeff        smallconst   00061F
__initialization         cinit        001862
__mediumconst            mediumconst  000000
__pbssBANK0              bssBANK0     0000BD
__pbssBANK1              bssBANK1     000100
__pbssBANK3              bssBANK3     000300
__pbssCOMRAM             bssCOMRAM    00005A
__pcinit                 cinit        001862
__pcstackBANK0           cstackBANK0  000080
__pcstackCOMRAM          cstackCOMRAM 000001
__pdataBANK0             dataBANK0    0000C8
__pdataBANK2             dataBANK2    000200
__pdataCOMRAM            dataCOMRAM   000060
__pidataBANK0            idataBANK0   001D92
__pidataBANK2            idataBANK2   001AFC
__pidataCOMRAM           idataCOMRAM  001D97
__pintcode               intcode      000008
__psmallconst            smallconst   000600
__ptext0                 text0        000620
__ptext1                 text1        000EC6
__ptext10                text10       001358
__ptext11                text11       001B48
__ptext12                text12       0010B6
__ptext13                text13       001CFA
__ptext14                text14       00144C
__ptext15                text15       001B8A
__ptext16                text16       001D1E
__ptext17                text17       0017B4
__ptext18                text18       001988
__ptext19                text19       001C2A
__ptext2                 text2        0016EE
__ptext20                text20       001C5A
__ptext21                text21       001BC2
__ptext22                text22       001D76
__ptext23                text23       001D42
__ptext24                text24       001D84
__ptext25                text25       001C84
__ptext26                text26       001BF8
__ptext27                text27       001CAC
__ptext29                text29       001D5E
__ptext3                 text3        001532
__ptext4                 text4        001A0C
__ptext5                 text5        001264
__ptext6                 text6        0018F8
__ptext7                 text7        001A84
__ptext8                 text8        001614
__ptext9                 text9        001CD4
__ramtop                 ramtop       000600
__size_of_ADCInit        (abs)        000000
__size_of_Adc            (abs)        000000
__size_of_ClearArray     (abs)        000000
__size_of_ClockInit      (abs)        000000
__size_of_ISR            (abs)        000000
__size_of_InitTmr0       (abs)        000000
__size_of_Modulo         (abs)        000000
__size_of_PrintC         (abs)        000000
__size_of_PrintS         (abs)        000000
__size_of_SpiInit        (abs)        000000
__size_of_UartInit       (abs)        000000
__size_of___altoft       (abs)        000000
__size_of___awdiv        (abs)        000000
__size_of___awtoft       (abs)        000000
__size_of___ftadd        (abs)        000000
__size_of___ftdiv        (abs)        000000
__size_of___ftge         (abs)        000000
__size_of___ftmul        (abs)        000000
__size_of___ftneg        (abs)        000000
__size_of___ftpack       (abs)        000000
__size_of___ftsub        (abs)        000000
__size_of___fttol        (abs)        000000
__size_of___lwtoft       (abs)        000000
__size_of___wmul         (abs)        000000
__size_of_eval_poly      (abs)        000000
__size_of_exp            (abs)        000000
__size_of_floor          (abs)        000000
__size_of_frexp          (abs)        000000
__size_of_ldexp          (abs)        000000
__size_of_main           (abs)        000000
__smallconst             smallconst   000600
_cpt                     bssBANK0     0000C3
_errno                   bssBANK0     0000BD
_eval_poly               text8        001614
_exp                     text1        000EC6
_exp$1529                cstackBANK0  0000A2
_floor                   text3        001532
_frexp                   text4        001A0C
_ldexp                   text2        0016EE
_main                    text0        000620
_main$1525               cstackBANK0  0000AC
_main$1526               cstackBANK0  0000AF
_main$1527               cstackBANK0  0000B3
_main$1528               cstackBANK0  0000B6
_text_prgm               dataBANK2    000200
btemp                    temp         000062
end_of_initialization    cinit        0018EA
eval_poly@d              cstackBANK0  00008F
eval_poly@n              cstackBANK0  000091
eval_poly@res            cstackBANK0  000095
eval_poly@x              cstackBANK0  00008C
exp@coeff                smallconst   000601
exp@exponent             cstackBANK0  0000A5
exp@sign                 cstackBANK0  0000A7
exp@x                    cstackBANK0  00009F
floor@expon              cstackBANK0  000092
floor@i                  cstackBANK0  00008F
floor@x                  cstackBANK0  00008C
frexp@eptr               cstackCOMRAM 000021
frexp@value              cstackCOMRAM 00001E
int$flags                temp         000062
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
ldexp@newexp             cstackBANK0  00009B
ldexp@value              cstackBANK0  000098
main@CptTmr0             cstackBANK0  0000B2
main@adc_res             cstackBANK0  0000BA
main@taille_text_prgm    cstackBANK0  0000B9
main@taille_text_spi     cstackBANK0  0000B8
stackhi                  (abs)        0005FF
stacklo                  (abs)        0003C4
start                    init         0005B6
start_initialization     cinit        001862
wtemp6                   temp         000063


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 160 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  adc_res         3   58[BANK0 ] float 
  taille_text_    1   57[BANK0 ] unsigned char 
  taille_text_    1   56[BANK0 ] unsigned char 
  CptTmr0         1   50[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      17       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0
      Totals:         0      21       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_ADCInit
		_Adc
		_ClearArray
		_ClockInit
		_InitTmr0
		_PrintS
		_SpiInit
		_UartInit
		___awdiv
		___awtoft
		___ftadd
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		___fttol
		___lwtoft
		_exp
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _exp *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
 Parameters:    Size  Location     Type
  x               3   31[BANK0 ] void 
 Auto vars:     Size  Location     Type
  exponent        2   37[BANK0 ] int 
  sign            1   39[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   31[BANK0 ] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___awtoft
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		_eval_poly
		_floor
		_ldexp
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ldexp *****************
 Defined at:
		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3   24[BANK0 ] unsigned char 
  newexp          2   27[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   24[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       5       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 Parameters:    Size  Location     Type
  x               3   12[BANK0 ] int 
 Auto vars:     Size  Location     Type
  i               3   15[BANK0 ] int 
  expon           2   18[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   12[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       5       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___altoft
		___ftadd
		___ftge
		___fttol
		_frexp
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3   29[COMRAM] int 
  eptr            2   32[COMRAM] PTR int 
		 -> floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   29[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   52[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   62[COMRAM] unsigned long 
  exp1            1   66[COMRAM] unsigned char 
  sign1           1   61[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   52[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3   29[COMRAM] float 
  ff2             3   32[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   67[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   76[COMRAM] unsigned char 
  exp             1   75[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   67[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   12[BANK0 ] float 
  d               2   15[BANK0 ] PTR const 
		 -> exp@coeff(30), 
  n               2   17[BANK0 ] int 
 Auto vars:     Size  Location     Type
  res             3   21[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   12[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
		___ftmul
		___wmul
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   29[COMRAM] unsigned int 
  multiplicand    2   31[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   33[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   29[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   74[COMRAM] float 
  f2              3   77[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   84[COMRAM] unsigned um
  sign            1   88[COMRAM] unsigned char 
  cntr            1   87[COMRAM] unsigned char 
  exp             1   83[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   74[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_main
		_exp
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f1              3   12[BANK0 ] float 
  f2              3   15[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   12[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK0 ] float 
  f2              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
  exp1            1   11[BANK0 ] unsigned char 
  exp2            1   10[BANK0 ] unsigned char 
  sign            1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_main
		_floor
		___ftsub
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3   71[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   71[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_exp
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   37[COMRAM] float 
  f2              3   40[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3              3   47[COMRAM] float 
  sign            1   51[COMRAM] unsigned char 
  exp             1   50[COMRAM] unsigned char 
  cntr            1   46[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   37[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_main
		_exp
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2   67[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   70[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   67[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_main
		_exp
 This function uses a non-reentrant model


 *************** function ___lwtoft *****************
 Defined at:
		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 Parameters:    Size  Location     Type
  c               2   37[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   37[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3   29[COMRAM] unsigned um
  exp             1   32[COMRAM] unsigned char 
  sign            1   33[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   29[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lwtoft
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   29[COMRAM] int 
  divisor         2   31[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   35[COMRAM] int 
  sign            1   34[COMRAM] unsigned char 
  counter         1   33[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   29[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UartInit *****************
 Defined at:
		line 425 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SpiInit *****************
 Defined at:
		line 402 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PrintS *****************
 Defined at:
		line 520 in file "main.c"
 Parameters:    Size  Location     Type
  s_printS        2   30[COMRAM] PTR const unsigned char 
		 -> SendMsgSreen(252), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_PrintC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PrintC *****************
 Defined at:
		line 505 in file "main.c"
 Parameters:    Size  Location     Type
  c_printC        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c_printC        1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_PrintS
 This function uses a non-reentrant model


 *************** function _InitTmr0 *****************
 Defined at:
		line 457 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ClockInit *****************
 Defined at:
		line 382 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ClearArray *****************
 Defined at:
		line 536 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  cpt_vide        1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Adc *****************
 Defined at:
		line 487 in file "main.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1   33[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   29[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADCInit *****************
 Defined at:
		line 388 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 563 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Receive         1   27[COMRAM] unsigned char 
  data_spi        1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:         25       0       0       0       0       0       0
      Totals:        27       0       0       0       0       0       0
Total ram usage:       27 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Modulo
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _Modulo *****************
 Defined at:
		line 554 in file "main.c"
 Parameters:    Size  Location     Type
  M_nombre        2    0[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c
		___ftneg       		CODE           	1CFA	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c
		___ftsub       		CODE           	1B48	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c estimated size: 67

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
		___ftpack      		CODE           	17B4	0000	175

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c estimated size: 175

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c
		___wmul        		CODE           	1CD4	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c estimated size: 39

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c
		_ldexp         		CODE           	16EE	0000	199
		_frexp         		CODE           	1A0C	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c estimated size: 320

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c
		___ftge        		CODE           	18F8	0000	145

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c estimated size: 145

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c
		_floor         		CODE           	1532	0000	227

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c estimated size: 227

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
		___ftmul       		CODE           	1358	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c estimated size: 245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c
		___ftdiv       		CODE           	144C	0000	231

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c estimated size: 231

shared
		exp@coeff      		SMALLCONST     	0601	0000	31
		__initialization		CODE           	1862	0000	137

shared estimated size: 168

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
		___fttol       		CODE           	1264	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c estimated size: 245

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c
		___awtoft      		CODE           	1B8A	0000	57

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c estimated size: 57

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c
		___awdiv       		CODE           	1988	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c estimated size: 133

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c
		_eval_poly     		CODE           	1614	0000	219

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c estimated size: 219

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c
		___ftadd       		CODE           	10B6	0000	431

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c estimated size: 431

main.c
		_SpiInit       		CODE           	1C5A	0000	43
		_InitTmr0      		CODE           	1D42	0000	29
		_ISR           		CODE           	0008	0000	1455
		_Adc           		CODE           	1BF8	0000	51
		_ClearArray    		CODE           	1C84	0000	41
		_ADCInit       		CODE           	1CAC	0000	41
		_main          		CODE           	0620	0000	2215
		_PrintC        		CODE           	1D76	0000	15
		_Modulo        		CODE           	1D5E	0000	25
		_UartInit      		CODE           	1C2A	0000	49
		_ClockInit     		CODE           	1D84	0000	15
		_PrintS        		CODE           	1BC2	0000	55

main.c estimated size: 4034

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c
		___lwtoft      		CODE           	1D1E	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c
		_exp           		CODE           	0EC6	0000	497

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c estimated size: 497

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c
		___altoft      		CODE           	1A84	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c estimated size: 121

